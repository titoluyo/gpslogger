buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

plugins {
    id "com.mendhak.gradlecrowdin" version "0.0.5"
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url  "https://dl.bintray.com/mendhak/maven"
    }
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 69
        versionName "69"
    }

    //Adding API keys to BuildConfig
    defaultConfig {
        //Set these values in ~/.gradle/gradle.properties
        buildConfigField "String", "OSM_CONSUMER_KEY", "\"" + GPSLOGGER_OSM_CONSUMERKEY + "\""
        buildConfigField "String", "OSM_CONSUMER_SECRET", "\"" + GPSLOGGER_OSM_CONSUMERSECRET + "\""
        buildConfigField "String", "DROPBOX_APP_KEY", "\"" + GPSLOGGER_DROPBOX_APPKEY + "\""
        buildConfigField "String", "DROPBOX_APP_SECRET", "\"" + GPSLOGGER_DROPBOX_APPSECRET + "\""
        resValue "string", "DROPBOX_DB_SCHEME", "\"db-" + GPSLOGGER_DROPBOX_APPKEY + "\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    //Bug: http://stackoverflow.com/a/20675331
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        androidTest.setRoot('src/test')
    }


    //Release signing key
    if (project.hasProperty("RELEASE_STORE_FILE")) {
        signingConfigs {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }

    //Copies final APK to this directory
    assembleRelease.doLast {
        copy{
            from "build/outputs/apk/gpslogger-release.apk"
            into "./"

            // Use a closure to map the file name
            rename { String fileName ->
                fileName.replace('release', android.defaultConfig.versionName)
            }
        }
    }

    //Predexing libraries takes up too much memory and causes travis-ci to choke
    dexOptions {
        preDexLibraries = false
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.5'

    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.google.android.gms:play-services-base:8.4.0'
    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile 'com.google.android.gms:play-services-drive:8.4.0'

    compile('commons-net:commons-net:2.0')

    compile('org.apache.httpcomponents:httpmime:4.0.3'){
        exclude module: 'commons-logging'
        exclude module: 'httpcore'
        exclude module: 'httpclient'
    }

    compile('org.apache.james:apache-mime4j:0.6.1'){
        exclude module: 'commons-logging'
    }

    compile('oauth.signpost:signpost-commonshttp4:1.2.1.1'){
        exclude module: 'commons-logging'
        exclude module: 'httpcore'
        exclude module: 'httpclient'
    }

    compile('oauth.signpost:signpost-core:1.2.1.1'){
        exclude module: 'commons-codec'
    }

    compile('com.googlecode.json-simple:json-simple:1.1')

    //Logging
    compile('org.slf4j:slf4j-api:1.7.6')
    compile('com.github.tony19:logback-android-classic:1.1.1-2')
    compile('com.github.tony19:logback-android-core:1.1.1-2')


    //Android lollipop/material features including the Toolbar
    compile "com.android.support:appcompat-v7:23.1.1"

    //Recycler view required by material dialog custom URL alert box
    compile "com.android.support:recyclerview-v7:23.1.1"

    //Cardviews
    compile "com.android.support:cardview-v7:23.1.1"

    //Material dialogs
    //compile('com.afollestad:material-dialogs:a240bbe@aar')
    compile('com.github.afollestad.material-dialogs:core:0.8.5.2@aar') {
        transitive = true
    }
    compile('com.github.afollestad.material-dialogs:commons:0.8.5.2@aar') {
        transitive = true
    }

    //The material drawer
    compile 'com.heinrichreimersoftware.materialdrawer:library:2.1'

    //Progress button
    compile 'com.github.dmytrodanylyk.android-process-button:library:1.0.0'

    //Android Priority Jobqueue
    compile 'com.birbit:android-priority-jobqueue:1.3.1'

    //Event bus
    compile 'de.greenrobot:eventbus:2.4.0'

    //JARs which aren't on maven
    compile 'com.mendhak.gpsloggersupport:activation:0.0.1'
    compile 'com.mendhak.gpsloggersupport:additionnal:0.0.1'
    compile 'com.mendhak.gpsloggersupport:mail:0.0.1'
    compile 'com.mendhak.gpsloggersupport:dropbox-android-sdk:1.6.3'
    compile 'com.mendhak.gpsloggersupport:owncloud-android-library:0.0.1@aar'

    //Required by owncloud library
    compile ('commons-httpclient:commons-httpclient:3.1') {
                exclude module: 'commons-logging'
    }
    compile 'org.apache.jackrabbit:jackrabbit-webdav:2.10.1'

    //Expandable textview in the FAQ
    compile 'com.ms-square:expandableTextView:0.1.4'
}

tasks.whenTaskAdded { task ->
    //Don't run lint. Takes too long.
    if (task.name.contains("lint")) {
        task.enabled = false
    }

    if (task.name.contains("test")) {
        task.enabled = false
    }
}

//Download translations from Crowdin
if (project.hasProperty("CROWDIN_API_KEY")) {
    crowdinDownload {
        apiKey = CROWDIN_API_KEY
        destination = "$projectDir/src/main/res"
        projectId = 'gpslogger-for-android'

        //Android projects
        renameMapping = [
                from: '^([^-]*)/(.*)$',
                to  : /values-\1\/\2/
        ]

        excludePattern = '**/*.txt'
    }

    crowdinDownload {
        apiKey = CROWDIN_API_KEY
        destination = "$projectDir/src/main/res"
        projectId = 'gpslogger-for-android'

        //Android projects
        renameMapping = [
                from: '^([^-]*)-([^-]*)/(.*)$',
                to  : /values-\1-r\2\/\3/
        ]

        excludePattern = '**/*.txt'
    }

    crowdinUpload {
        apiKey = CROWDIN_API_KEY
        projectId = 'gpslogger-for-android'
        sourceFile = "$projectDir/src/main/res/values/strings.xml"
    }

    crowdinUpload {
        apiKey = CROWDIN_API_KEY
        projectId = 'gpslogger-for-android'
        sourceFile = "$projectDir/src/main/res/values/strings_faq.xml"
    }
}